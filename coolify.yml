version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_URL=${APP_URL}
      - WUZAPI_URL=http://wuzapi:8080
      - WUZAPI_API_KEY=1234ABCD
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL:-}
    depends_on:
      - postgres-setup
      - redis
      - wuzapi
    volumes:
      - ./uploads:/var/www/html/uploads
      - ./logs:/var/www/html/logs
    networks:
      - divino-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=divino_lanches
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=divino_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256 --auth-local=trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - divino-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d divino_lanches"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - divino-network

  postgres-setup:
    image: postgres:15-alpine
    environment:
      - PGPASSWORD=divino_password
    command: |
      sh -c "
        echo '=== FOR√áANDO CRIA√á√ÉO DE USU√ÅRIOS POSTGRESQL ==='
        echo 'Aguardando PostgreSQL estar pronto...'
        until pg_isready -h postgres -p 5432; do
          echo 'PostgreSQL n√£o est√° pronto ainda, aguardando...'
          sleep 2
        done
        echo 'PostgreSQL est√° pronto!'
        echo 'Conectando como usu√°rio padr√£o do PostgreSQL...'
        PGPASSWORD=divino_password psql -h postgres -p 5432 -U postgres -d postgres <<-EOSQL
          DO \\\$\\\$ 
          BEGIN
              IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'postgres') THEN
                  CREATE ROLE postgres WITH LOGIN SUPERUSER CREATEDB CREATEROLE PASSWORD 'divino_password';
                  RAISE NOTICE 'Usu√°rio postgres criado com sucesso';
              ELSE
                  RAISE NOTICE 'Usu√°rio postgres j√° existe';
              END IF;
          END \\\$\\\$;
          
          DO \\\$\\\$ 
          BEGIN
              IF NOT EXISTS (SELECT FROM pg_catalog.pg_roles WHERE rolname = 'wuzapi') THEN
                  CREATE ROLE wuzapi WITH LOGIN CREATEDB PASSWORD 'wuzapi';
                  RAISE NOTICE 'Usu√°rio wuzapi criado com sucesso';
              ELSE
                  RAISE NOTICE 'Usu√°rio wuzapi j√° existe';
              END IF;
          END \\\$\\\$;
          
          DO \\\$\\\$ 
          BEGIN
              IF NOT EXISTS (SELECT FROM pg_database WHERE datname = 'wuzapi') THEN
                  CREATE DATABASE wuzapi OWNER wuzapi;
                  RAISE NOTICE 'Banco wuzapi criado com sucesso';
              ELSE
                  RAISE NOTICE 'Banco wuzapi j√° existe';
              END IF;
          END \\\$\\\$;
        EOSQL
        echo 'Concedendo privil√©gios ao usu√°rio wuzapi...'
        PGPASSWORD=divino_password psql -h postgres -p 5432 -U postgres -d wuzapi <<-EOSQL
          GRANT USAGE ON SCHEMA public TO wuzapi;
          GRANT CREATE ON SCHEMA public TO wuzapi;
          GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO wuzapi;
          GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO wuzapi;
          ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO wuzapi;
          ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO wuzapi;
        EOSQL
        echo '‚úÖ Usu√°rios criados com sucesso!'
        echo 'üìä Usu√°rios: postgres, wuzapi'
        echo 'üóÑÔ∏è Bancos: divino_lanches, wuzapi'
      "
    networks:
      - divino-network
    depends_on:
      postgres:
        condition: service_healthy

  wuzapi:
    build:
      context: ./docker/wuzapi
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=wuzapi
      - DB_USER=wuzapi
      - DB_PASSWORD=wuzapi
      - WUZAPI_URL=http://wuzapi:8080
      - WEBHOOK_URL=http://app:80/webhook/wuzapi.php
      - WUZAPI_ADMIN_TOKEN=admin123456
    volumes:
      - wuzapi_sessions:/app/sessions
      - wuzapi_logs:/app/logs
    depends_on:
      - postgres-setup
    networks:
      - divino-network

volumes:
  postgres_data:
  redis_data:
  wuzapi_sessions:
  wuzapi_logs:

networks:
  divino-network:
    driver: bridge