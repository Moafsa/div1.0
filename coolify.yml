version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_URL=${APP_URL}
      - WUZAPI_URL=http://wuzapi:8080
      - WUZAPI_API_KEY=1234ABCD
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL:-}
    depends_on:
      - postgres
      - redis
      - wuzapi
    volumes:
      - ./uploads:/var/www/html/uploads
      - ./logs:/var/www/html/logs
    networks:
      - divino-network

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME:-divino_lanches}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-divino_password}
      - POSTGRES_FORCE_INITDB=1
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - divino-network
    command: >
      bash -c "
      echo '=== FORCING POSTGRESQL INITIALIZATION ===';
      if [ -d /var/lib/postgresql/data ]; then
        echo 'Removing existing data directory...';
        rm -rf /var/lib/postgresql/data/*;
      fi;
      echo 'Starting PostgreSQL in background...';
      docker-entrypoint.sh postgres &
      echo 'Waiting for PostgreSQL to be ready...';
      while ! pg_isready -h localhost -p 5432 -U postgres; do
        echo 'PostgreSQL not ready yet, waiting...';
        sleep 2;
      done;
      echo 'PostgreSQL is ready! Creating database schema and data...';
      echo 'Creating basic tables...';
      psql -h localhost -U postgres -d divino_lanches -c \"CREATE EXTENSION IF NOT EXISTS \\\"uuid-ossp\\\";\";
      psql -h localhost -U postgres -d divino_lanches -c \"CREATE TABLE IF NOT EXISTS tenants (id SERIAL PRIMARY KEY, nome VARCHAR(255) NOT NULL, subdomain VARCHAR(100) UNIQUE, domain VARCHAR(255), cnpj VARCHAR(18), telefone VARCHAR(20), email VARCHAR(255), endereco TEXT, logo_url VARCHAR(500), cor_primaria VARCHAR(7) DEFAULT '#007bff', status VARCHAR(20) DEFAULT 'ativo' CHECK (status IN ('ativo', 'inativo', 'suspenso')), plano_id INTEGER, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);\";
      psql -h localhost -U postgres -d divino_lanches -c \"CREATE TABLE IF NOT EXISTS planos (id SERIAL PRIMARY KEY, nome VARCHAR(100) NOT NULL, max_mesas INTEGER DEFAULT 10, max_usuarios INTEGER DEFAULT 3, max_produtos INTEGER DEFAULT 100, max_pedidos_mes INTEGER DEFAULT 1000, recursos JSONB, preco_mensal DECIMAL(10,2), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);\";
      psql -h localhost -U postgres -d divino_lanches -c \"CREATE TABLE IF NOT EXISTS filiais (id SERIAL PRIMARY KEY, tenant_id INTEGER NOT NULL REFERENCES tenants(id) ON DELETE CASCADE, nome VARCHAR(255) NOT NULL, endereco TEXT, telefone VARCHAR(20), email VARCHAR(255), cnpj VARCHAR(18), logo_url VARCHAR(500), status VARCHAR(20) DEFAULT 'ativo' CHECK (status IN ('ativo', 'inativo')), created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP);\";
      psql -h localhost -U postgres -d divino_lanches -c \"CREATE TABLE IF NOT EXISTS usuarios (id SERIAL PRIMARY KEY, login VARCHAR(255) NOT NULL, senha VARCHAR(255) NOT NULL, nivel INTEGER NOT NULL DEFAULT 1, pergunta VARCHAR(255) NOT NULL, resposta VARCHAR(255) NOT NULL, tenant_id INTEGER NOT NULL REFERENCES tenants(id) ON DELETE CASCADE, filial_id INTEGER REFERENCES filiais(id) ON DELETE SET NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP, UNIQUE(login, tenant_id));\";
      echo 'Inserting essential data...';
      psql -h localhost -U postgres -d divino_lanches -c \"INSERT INTO planos (id, nome, max_mesas, max_usuarios, max_produtos, max_pedidos_mes, recursos, preco_mensal) VALUES (1, 'Starter', 5, 2, 50, 500, '{\\\"relatorios_basicos\\\": true}', 29.90), (2, 'Professional', 15, 5, 200, 2000, '{\\\"relatorios_avancados\\\": true}', 79.90), (3, 'Enterprise', -1, -1, -1, -1, '{\\\"relatorios_customizados\\\": true}', 199.90) ON CONFLICT (id) DO NOTHING;\";
      psql -h localhost -U postgres -d divino_lanches -c \"INSERT INTO tenants (id, nome, subdomain, domain, cnpj, telefone, email, endereco, cor_primaria, status, plano_id) VALUES (1, 'Divino Lanches', 'divino', 'divinolanches.com', '12345678000199', '(11) 99999-9999', 'contato@divinolanches.com', 'Rua das Flores, 123', '#28a745', 'ativo', 2) ON CONFLICT (id) DO NOTHING;\";
      psql -h localhost -U postgres -d divino_lanches -c \"INSERT INTO filiais (id, tenant_id, nome, endereco, telefone, email, cnpj, status) VALUES (1, 1, 'Matriz', 'Rua das Flores, 123', '(11) 99999-9999', 'contato@divinolanches.com', '12345678000199', 'ativo') ON CONFLICT (id) DO NOTHING;\";
      psql -h localhost -U postgres -d divino_lanches -c \"INSERT INTO usuarios (id, login, senha, nivel, pergunta, resposta, tenant_id, filial_id) VALUES (1, 'admin', '$2y$10$bOYm96HqCJ4p7lcazLBpuO0JllFT6UE8PIC/N2qbHgIzenqKqB2WK', 1, 'admin', 'admin', 1, 1) ON CONFLICT (id) DO NOTHING;\";
      echo '✅ Main database initialization completed!';
      echo 'Creating WuzAPI user and database...';
      psql -h localhost -U postgres -d divino_lanches -c \"DROP ROLE IF EXISTS wuzapi;\";
      psql -h localhost -U postgres -d divino_lanches -c \"CREATE ROLE wuzapi WITH LOGIN CREATEDB PASSWORD 'wuzapi';\";
      psql -h localhost -U postgres -d divino_lanches -c \"DROP DATABASE IF EXISTS wuzapi;\";
      psql -h localhost -U postgres -d divino_lanches -c \"CREATE DATABASE wuzapi OWNER wuzapi;\";
      psql -h localhost -U postgres -d divino_lanches -c \"GRANT ALL PRIVILEGES ON DATABASE wuzapi TO wuzapi;\";
      echo '✅ WuzAPI user and database created successfully!';
      echo 'Database initialization completed! Waiting for PostgreSQL...';
      wait;
      "


  redis:
    image: redis:7-alpine
    volumes:
      - redis_data:/data
    networks:
      - divino-network

  wuzapi:
    build:
      context: ./docker/wuzapi
      dockerfile: Dockerfile
    ports:
      - "8081:8080"  # Backend Go - Externo:8081 → Interno:8080
      - "3001:3000"  # Frontend React - Externo:3001 → Interno:3000
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=wuzapi
      - DB_USER=wuzapi
      - DB_PASSWORD=wuzapi
      - WUZAPI_URL=http://wuzapi:8080
      - WEBHOOK_URL=http://app:80/webhook/wuzapi.php
      - WUZAPI_ADMIN_TOKEN=admin123456
    volumes:
      - wuzapi_sessions:/app/sessions
      - wuzapi_logs:/app/logs
      - ./wuzapi/.env:/app/.env
    depends_on:
      - postgres
    networks:
      - divino-network

volumes:
  postgres_data:
  redis_data:
  wuzapi_sessions:
  wuzapi_logs:

networks:
  divino-network:
    driver: bridge
