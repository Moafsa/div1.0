version: '3.8'

networks:
  divino_network:
    driver: bridge

services:
  app:
    build: .
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - APP_NAME=Divino Lanches
      - APP_URL=${APP_URL}
      - APP_DEBUG=false
      - MULTI_TENANT_ENABLED=true
      - UPLOAD_MAX_SIZE=10M
      - ALLOWED_EXTENSIONS=jpg,jpeg,png,gif,pdf,doc,docx
      - EVOLUTION_BASE_URL=http://evolution
      - EVOLUTION_API_KEY=${EVOLUTION_API_KEY}
      - N8N_WEBHOOK_URL=${N8N_WEBHOOK_URL}
    depends_on:
      - postgres
      - redis
      - evolution
    volumes:
      - ./uploads:/var/www/html/uploads
      - ./logs:/var/www/html/logs
    networks:
      - divino_network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - divino_postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
    networks:
      - divino_network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    volumes:
      - divino_redis_data:/data
    networks:
      - divino_network
    restart: unless-stopped


  evolution:
    image: atendai/evolution-api:v2.1.2
    environment:
      - SERVER_URL=${APP_URL}
      - AUTHENTICATION_TYPE=apikey
      - AUTHENTICATION_API_KEY=${EVOLUTION_API_KEY}
      - AUTHENTICATION_EXPOSE_IN_FETCH_INSTANCES=true
      - LANGUAGE=pt-BR
      - CONFIG_SESSION_PHONE_CLIENT=DivinoLanches
      - CONFIG_SESSION_PHONE_NAME=chrome
      - CONFIG_SESSION_PHONE_VERSION=2.3000.1025207447
      - QRCODE_LIMIT=9999999999
      - QRCODE_COLOR=#198754
      - DATABASE_ENABLED=true
      - DATABASE_PROVIDER=postgresql
      - DATABASE_CONNECTION_URI=postgresql://${DB_USER}:${DB_PASSWORD}@postgres:5432/evolution_db
      - DATABASE_CONNECTION_CLIENT_NAME=evolution
      - DATABASE_SAVE_DATA_INSTANCE=true
      - DATABASE_SAVE_DATA_NEW_MESSAGE=true
      - DATABASE_SAVE_MESSAGE_UPDATE=true
      - DATABASE_SAVE_DATA_CONTACTS=true
      - DATABASE_SAVE_DATA_CHATS=true
      - CACHE_REDIS_ENABLED=true
      - CACHE_REDIS_URI=redis://redis:6379/2
      - CACHE_REDIS_PREFIX_KEY=evolution
      - CACHE_REDIS_SAVE_INSTANCES=false
      - CACHE_LOCAL_ENABLED=false
      - DEL_INSTANCE=false
      - DEL_TEMP_INSTANCES=false
      - WEBHOOK_GLOBAL_ENABLED=true
      - WEBHOOK_GLOBAL_URL=${APP_URL}/webhook/evolution
      - WEBHOOK_GLOBAL_WEBHOOK_BY_EVENTS=true
      - WEBHOOK_EVENTS_QRCODE_UPDATED=true
      - WEBHOOK_EVENTS_MESSAGES_UPSERT=true
      - WEBHOOK_EVENTS_MESSAGES_UPDATE=true
      - WEBHOOK_EVENTS_SEND_MESSAGE=true
      - WEBHOOK_EVENTS_CONTACTS_SET=true
      - WEBHOOK_EVENTS_CONTACTS_UPSERT=true
      - WEBHOOK_EVENTS_CONTACTS_UPDATE=true
      - WEBHOOK_EVENTS_PRESENCE_UPDATE=true
      - WEBHOOK_EVENTS_CHATS_SET=true
      - WEBHOOK_EVENTS_CHATS_UPSERT=true
      - WEBHOOK_EVENTS_CHATS_UPDATE=true
      - WEBHOOK_EVENTS_CHATS_DELETE=true
      - WEBHOOK_EVENTS_GROUPS_UPSERT=true
      - WEBHOOK_EVENTS_GROUP_UPDATE=true
      - WEBHOOK_EVENTS_GROUP_PARTICIPANTS_UPDATE=true
      - WEBHOOK_EVENTS_CONNECTION_UPDATE=true
    volumes:
      - divino_evolution_data:/evolution/instances
      - divino_evolution_logs:/evolution/logs
    networks:
      - divino_network
    depends_on:
      - postgres
      - redis
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/manager/health-check"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  divino_postgres_data:
  divino_redis_data:
  divino_evolution_data:
  divino_evolution_logs: